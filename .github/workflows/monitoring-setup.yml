name: Setup Monitoring (Prometheus & Grafana)

on:
  workflow_dispatch:

jobs:
  setup-monitoring:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            us-east-1

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name chatbot-cluster \
            --region us-east-1
      - name: Deploy Prometheus & Grafana
        run: |
          kubectl get ns monitoring || kubectl create namespace monitoring
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          if ! helm status kube-prometheus-stack -n monitoring; then
            helm install kube-prometheus-stack prometheus-community/kube-prometheus-stack --namespace monitoring --version 57.0.0
          else
            helm upgrade kube-prometheus-stack prometheus-community/kube-prometheus-stack --namespace monitoring --version 57.0.0
          fi
      - name: Print Grafana Access
        run: |
          GRAFANA_IP=$(kubectl get svc -n monitoring kube-prometheus-stack-grafana -o json | jq -r '.status.loadBalancer.ingress[0].hostname // .status.loadBalancer.ingress[0].ip')
          if [ "$GRAFANA_IP" != "null" ] && [ -n "$GRAFANA_IP" ]; then
            echo "Grafana dashboard: http://$GRAFANA_IP"
          else
            echo "Grafana chưa có IP, cần port-forward hoặc chờ thêm.."
          fi
          echo "---"
          echo "Để lấy password admin Grafana:"
          echo "kubectl get secret -n monitoring kube-prometheus-stack-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode"